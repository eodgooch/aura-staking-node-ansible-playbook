---
- hosts: localhost
  connection: local
  become: no
  roles:
    - { role: digitalocean, tags: [digitalocean] }

- hosts: localhost
  connection: local
  become: no
  gather_facts: false
  tasks:
    - name: Waiting for droplet DNS to propagate
      pause:
        seconds: 30
      when: droplet.changed

- hosts: do_droplet_in_memory
  name: Test Connection and Determine Remote User
  gather_facts: false
  roles:
    - { role: connection, tags: [connection, always] }
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - local_python_interpreter: "{{ ansible_playbook_python }}"

- hosts: do_droplet_in_memory
  gather_facts: no
  become: no
  roles:
    - { role: python-raw }

- hosts: do_droplet_in_memory
  become: no
  gather_facts: true
  tasks:
    - name: Get local machine's IP address
      set_fact:
        local_machine_ip: "{{ ansible_env['SSH_CLIENT'].split() | first }}"
      changed_when: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3

- hosts: do_droplet_in_memory
  become: yes
  gather_facts: true
  roles:
    - { role: swapfile, tags: [swapfile] }
    - { role: fail2ban, tags: [fail2ban] }
    - { role: ufw, tags: [ufw] }
    - { role: ntp, tags: [ntp] }
    - { role: users, tags: [users] }
    - { role: unattended-upgrades, tags: [unattended-upgrades] }
    - { role: sshd, tags: [sshd] }
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - fail2ban_ip_whitelist: "{{ local_machine_ip }}/8"
    - ansible_python_interpreter: /usr/bin/python3

- hosts: do_droplet_in_memory
  become: yes
  gather_facts: true
  tasks:
    - name: Configuring ufw logrotate
      template:
        src: etc-logrotate.d-ufw.j2
        dest: /etc/logrotate.d/ufw
        owner: root
        group: root
        mode: "0644"
    - name: Configuring syslog logrotate
      template:
        src: etc-logrotate.d-rsyslog.j2
        dest: /etc/logrotate.d/rsyslog
        owner: root
        group: root
        mode: "0644"

- hosts: do_droplet_in_memory
  become: yes
  gather_facts: true
  tasks:
    - name: docker
      include: tasks/docker-ce.yml

- hosts: do_droplet_in_memory
  become: yes
  gather_facts: true
  roles:
    - { role: docker-compose, tags: [docker-compose] }
  vars:
    - ansible_python_interpreter: /usr/bin/python3

- hosts: do_droplet_in_memory
  become: yes
  roles:
    - role: nodejs
  vars:
    - nodejs_version: "10.x"
    - nodejs_install_npm_user: "{{ ansible_ssh_user }}"
    - npm_config_prefix: "/usr/local/lib/npm"
    - npm_config_unsafe_perm: "true"
    - nodejs_npm_global_packages:
        - name: "@idexio/idexd-cli"
          version: 0.2.1
    - ansible_python_interpreter: /usr/bin/python3
