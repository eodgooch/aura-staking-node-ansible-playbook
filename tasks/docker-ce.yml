---
- name: Configuring docker
  template:
    src: etc-default-docker.j2
    dest: /etc/default/docker
    owner: root
    group: root
    mode: "0644"
  notify: restart docker

- name: Configuring logrotate
  template:
    src: etc-logrotate.d-docker.j2
    dest: /etc/logrotate.d/docker
    owner: root
    group: root
    mode: "0644"

- name: Set Ansible distribution release
  set_fact:
    ansible_distribution_release: '{{ ansible_facts["distribution_major_version"].split("/")[0]
                                      if (ansible_facts["distribution_major_version"].split("/") | length) > 1
                                      else ansible_facts["distribution_release"] }}'

- name: Installing dependencies
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - ca-certificates
      - apt-transport-https
      - software-properties-common

- name: Adding APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} test"
    update_cache: yes

- name: Installing packages
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - python-pip
      - "{{ docker_package }}"

- name: Installing Ansible PIP dependencies
  pip:
    name: "{{ item.name | default(item) }}"
    state: present
    version: "{{ item.version | default(omit) }}"
  with_items: "{{ docker_pip_dependencies }}"

- name: Managing images
  docker_image:
    name: "{{ item.name if item.name is defined else item }}"
    nocache: "{{ item.nocache | default(omit) }}"
    path: "{{ item.path | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    tag: "{{ item.tag | default(omit) }}"
    timeout: "{{ item.timeout | default(omit) }}"
  with_items: "{{ docker_images }}"
  register: docker_images_stat
  failed_when: docker_images_stat.msg and "Image builded:" not in docker_images_stat.msg

- name: Managing containers
  docker_container:
    count: "{{ item.count | default(omit) }}"
    command: "{{ item.command | default(omit) }}"
    env: "{{ item.env | default(omit) }}"
    expose: "{{ item.expose | default(omit) }}"
    hostname: "{{ item.hostname | default(omit) }}"
    image: "{{ item.image }}"
    labels: "{{ item.labels | default(omit) }}"
    links: "{{ item.links | default(omit) }}"
    name: "{{ item.name | default(omit) }}"
    ports: "{{ item.ports | default(omit) }}"
    privileged: "{{ item.privileged | default(omit) }}"
    pull: "{{ item.pull | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    volumes: "{{ item.volumes | default(omit) }}"
    volumes_from: "{{ item.volumes_from | default(omit) }}"
  with_items: "{{ docker_containers }}"

- name: Configuring service
  service:
    name: docker
    enabled: "{{ docker_service_enabled }}"
    state: "{{ docker_service_state }}"

